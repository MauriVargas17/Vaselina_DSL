/**
 * generated by Xtext 2.27.0-SNAPSHOT
 */
package org.xtext.example.mydsl.vaselina;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.vaselina.VaselinaFactory
 * @model kind="package"
 * @generated
 */
public interface VaselinaPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "vaselina";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mydsl/Vaselina";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "vaselina";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  VaselinaPackage eINSTANCE = org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.VaselinaProgramImpl <em>Program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaProgramImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getVaselinaProgram()
   * @generated
   */
  int VASELINA_PROGRAM = 0;

  /**
   * The feature id for the '<em><b>Global</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VASELINA_PROGRAM__GLOBAL = 0;

  /**
   * The feature id for the '<em><b>Func</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VASELINA_PROGRAM__FUNC = 1;

  /**
   * The feature id for the '<em><b>Main</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VASELINA_PROGRAM__MAIN = 2;

  /**
   * The number of structural features of the '<em>Program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VASELINA_PROGRAM_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.mainDeclaredImpl <em>main Declared</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.mainDeclaredImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getmainDeclared()
   * @generated
   */
  int MAIN_DECLARED = 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_DECLARED__BODY = 0;

  /**
   * The number of structural features of the '<em>main Declared</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MAIN_DECLARED_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.BodyStatementImpl <em>Body Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.BodyStatementImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getBodyStatement()
   * @generated
   */
  int BODY_STATEMENT = 2;

  /**
   * The number of structural features of the '<em>Body Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BODY_STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.varReturnImpl <em>var Return</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.varReturnImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarReturn()
   * @generated
   */
  int VAR_RETURN = 3;

  /**
   * The feature id for the '<em><b>Rtn</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_RETURN__RTN = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>var Return</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_RETURN_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.varDeclaredImpl <em>var Declared</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.varDeclaredImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarDeclared()
   * @generated
   */
  int VAR_DECLARED = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED__NAME = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED__TYPE = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Scope</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED__SCOPE = BODY_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Dim</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED__DIM = BODY_STATEMENT_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>var Declared</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARED_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.varAssignmentImpl <em>var Assignment</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.varAssignmentImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarAssignment()
   * @generated
   */
  int VAR_ASSIGNMENT = 5;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGNMENT__VARIABLE = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGNMENT__EXPR = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>var Assignment</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_ASSIGNMENT_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.VariableImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 6;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.arrayRefsImpl <em>array Refs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.arrayRefsImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getarrayRefs()
   * @generated
   */
  int ARRAY_REFS = 7;

  /**
   * The feature id for the '<em><b>Arr Refs</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REFS__ARR_REFS = VARIABLE_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Dims</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REFS__DIMS = VARIABLE_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>array Refs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REFS_FEATURE_COUNT = VARIABLE_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.varRefsImpl <em>var Refs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.varRefsImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarRefs()
   * @generated
   */
  int VAR_REFS = 8;

  /**
   * The feature id for the '<em><b>Va Refs</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REFS__VA_REFS = VARIABLE_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>var Refs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REFS_FEATURE_COUNT = VARIABLE_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.varSymbolImpl <em>var Symbol</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.varSymbolImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarSymbol()
   * @generated
   */
  int VAR_SYMBOL = 9;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_SYMBOL__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_SYMBOL__TYPE = 1;

  /**
   * The number of structural features of the '<em>var Symbol</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_SYMBOL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.arrayDimensionImpl <em>array Dimension</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.arrayDimensionImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getarrayDimension()
   * @generated
   */
  int ARRAY_DIMENSION = 10;

  /**
   * The feature id for the '<em><b>Index</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_DIMENSION__INDEX = 0;

  /**
   * The number of structural features of the '<em>array Dimension</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_DIMENSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.AbstractMethodCallImpl <em>Abstract Method Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.AbstractMethodCallImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getAbstractMethodCall()
   * @generated
   */
  int ABSTRACT_METHOD_CALL = 14;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_METHOD_CALL__ARGS = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Abstract Method Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_METHOD_CALL_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.FuncCallImpl <em>Func Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.FuncCallImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getFuncCall()
   * @generated
   */
  int FUNC_CALL = 11;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__ARGS = ABSTRACT_METHOD_CALL__ARGS;

  /**
   * The feature id for the '<em><b>Func</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL__FUNC = ABSTRACT_METHOD_CALL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Func Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_CALL_FEATURE_COUNT = ABSTRACT_METHOD_CALL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.FuncParameterImpl <em>Func Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.FuncParameterImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getFuncParameter()
   * @generated
   */
  int FUNC_PARAMETER = 12;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_PARAMETER__NAME = VAR_SYMBOL__NAME;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_PARAMETER__TYPE = VAR_SYMBOL__TYPE;

  /**
   * The number of structural features of the '<em>Func Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_PARAMETER_FEATURE_COUNT = VAR_SYMBOL_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.FuncDefinitionImpl <em>Func Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.FuncDefinitionImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getFuncDefinition()
   * @generated
   */
  int FUNC_DEFINITION = 13;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_DEFINITION__ARGS = 1;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_DEFINITION__BODY = 2;

  /**
   * The number of structural features of the '<em>Func Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNC_DEFINITION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.StdFunctionImpl <em>Std Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.StdFunctionImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getStdFunction()
   * @generated
   */
  int STD_FUNCTION = 15;

  /**
   * The feature id for the '<em><b>Args</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STD_FUNCTION__ARGS = ABSTRACT_METHOD_CALL__ARGS;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STD_FUNCTION__NAME = ABSTRACT_METHOD_CALL_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Std Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STD_FUNCTION_FEATURE_COUNT = ABSTRACT_METHOD_CALL_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.IfExpressionImpl <em>If Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.IfExpressionImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getIfExpression()
   * @generated
   */
  int IF_EXPRESSION = 16;

  /**
   * The feature id for the '<em><b>Ifconditon</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__IFCONDITON = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Then</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__THEN = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION__ELSE = BODY_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>If Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_EXPRESSION_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.DoWhileExpressionImpl <em>Do While Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.DoWhileExpressionImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getDoWhileExpression()
   * @generated
   */
  int DO_WHILE_EXPRESSION = 17;

  /**
   * The feature id for the '<em><b>Loop Conditon</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_WHILE_EXPRESSION__LOOP_CONDITON = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Body</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_WHILE_EXPRESSION__BODY = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Do While Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DO_WHILE_EXPRESSION_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.BrkStrImpl <em>Brk Str</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.BrkStrImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getBrkStr()
   * @generated
   */
  int BRK_STR = 18;

  /**
   * The feature id for the '<em><b>Brk</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BRK_STR__BRK = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Brk Str</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BRK_STR_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.ReturnDeclarationImpl <em>Return Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.ReturnDeclarationImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getReturnDeclaration()
   * @generated
   */
  int RETURN_DECLARATION = 19;

  /**
   * The feature id for the '<em><b>Rtn Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_DECLARATION__RTN_TYPE = BODY_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Return Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_DECLARATION_FEATURE_COUNT = BODY_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.DOUBLEImpl <em>DOUBLE</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.DOUBLEImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getDOUBLE()
   * @generated
   */
  int DOUBLE = 20;

  /**
   * The feature id for the '<em><b>Integer</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLE__INTEGER = 0;

  /**
   * The feature id for the '<em><b>Decimal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLE__DECIMAL = 1;

  /**
   * The number of structural features of the '<em>DOUBLE</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.varExpressionImpl <em>var Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.varExpressionImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarExpression()
   * @generated
   */
  int VAR_EXPRESSION = 21;

  /**
   * The number of structural features of the '<em>var Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_EXPRESSION_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.OrImpl <em>Or</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.OrImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getOr()
   * @generated
   */
  int OR = 22;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__LEFT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__OP = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR__RIGHT = VAR_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Or</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OR_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.AndImpl <em>And</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.AndImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getAnd()
   * @generated
   */
  int AND = 23;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__LEFT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__OP = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND__RIGHT = VAR_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>And</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.EqualityImpl <em>Equality</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.EqualityImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getEquality()
   * @generated
   */
  int EQUALITY = 24;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__LEFT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__OP = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY__RIGHT = VAR_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Equality</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQUALITY_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.ComparisonImpl <em>Comparison</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.ComparisonImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getComparison()
   * @generated
   */
  int COMPARISON = 25;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__LEFT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__OP = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON__RIGHT = VAR_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Comparison</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPARISON_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.PlusOrMinusImpl <em>Plus Or Minus</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.PlusOrMinusImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getPlusOrMinus()
   * @generated
   */
  int PLUS_OR_MINUS = 26;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_OR_MINUS__LEFT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_OR_MINUS__OP = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_OR_MINUS__RIGHT = VAR_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Plus Or Minus</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PLUS_OR_MINUS_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.MulOrDivImpl <em>Mul Or Div</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.MulOrDivImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getMulOrDiv()
   * @generated
   */
  int MUL_OR_DIV = 27;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OR_DIV__LEFT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OR_DIV__OP = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OR_DIV__RIGHT = VAR_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Mul Or Div</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MUL_OR_DIV_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.ModuleImpl <em>Module</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.ModuleImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getModule()
   * @generated
   */
  int MODULE = 28;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__LEFT = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__OP = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE__RIGHT = VAR_EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Module</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODULE_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.InsideImpl <em>Inside</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.InsideImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getInside()
   * @generated
   */
  int INSIDE = 29;

  /**
   * The feature id for the '<em><b>Inside</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSIDE__INSIDE = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Inside</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INSIDE_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.NotImpl <em>Not</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.NotImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getNot()
   * @generated
   */
  int NOT = 30;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT__EXPRESSION = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Not</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NOT_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.StringRefImpl <em>String Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.StringRefImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getStringRef()
   * @generated
   */
  int STRING_REF = 31;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_REF__VALUE = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_REF_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.numRefImpl <em>num Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.numRefImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getnumRef()
   * @generated
   */
  int NUM_REF = 32;

  /**
   * The feature id for the '<em><b>Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_REF__VALUE = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>num Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUM_REF_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.doubleRefImpl <em>double Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.doubleRefImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getdoubleRef()
   * @generated
   */
  int DOUBLE_REF = 33;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLE_REF__VALUE = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>double Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DOUBLE_REF_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.boolRefImpl <em>bool Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.boolRefImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getboolRef()
   * @generated
   */
  int BOOL_REF = 34;

  /**
   * The feature id for the '<em><b>Var Ref</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_REF__VAR_REF = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>bool Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_REF_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.varRefImpl <em>var Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.varRefImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarRef()
   * @generated
   */
  int VAR_REF = 35;

  /**
   * The feature id for the '<em><b>Var Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REF__VAR_REF = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>var Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_REF_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.vaselina.impl.arrayRefImpl <em>array Ref</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.vaselina.impl.arrayRefImpl
   * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getarrayRef()
   * @generated
   */
  int ARRAY_REF = 36;

  /**
   * The feature id for the '<em><b>Var Ref</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF__VAR_REF = VAR_EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Dim</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF__DIM = VAR_EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>array Ref</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARRAY_REF_FEATURE_COUNT = VAR_EXPRESSION_FEATURE_COUNT + 2;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.VaselinaProgram <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Program</em>'.
   * @see org.xtext.example.mydsl.vaselina.VaselinaProgram
   * @generated
   */
  EClass getVaselinaProgram();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.VaselinaProgram#getGlobal <em>Global</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Global</em>'.
   * @see org.xtext.example.mydsl.vaselina.VaselinaProgram#getGlobal()
   * @see #getVaselinaProgram()
   * @generated
   */
  EReference getVaselinaProgram_Global();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.VaselinaProgram#getFunc <em>Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Func</em>'.
   * @see org.xtext.example.mydsl.vaselina.VaselinaProgram#getFunc()
   * @see #getVaselinaProgram()
   * @generated
   */
  EReference getVaselinaProgram_Func();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.VaselinaProgram#getMain <em>Main</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Main</em>'.
   * @see org.xtext.example.mydsl.vaselina.VaselinaProgram#getMain()
   * @see #getVaselinaProgram()
   * @generated
   */
  EReference getVaselinaProgram_Main();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.mainDeclared <em>main Declared</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>main Declared</em>'.
   * @see org.xtext.example.mydsl.vaselina.mainDeclared
   * @generated
   */
  EClass getmainDeclared();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.mainDeclared#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see org.xtext.example.mydsl.vaselina.mainDeclared#getBody()
   * @see #getmainDeclared()
   * @generated
   */
  EReference getmainDeclared_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.BodyStatement <em>Body Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Body Statement</em>'.
   * @see org.xtext.example.mydsl.vaselina.BodyStatement
   * @generated
   */
  EClass getBodyStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.varReturn <em>var Return</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Return</em>'.
   * @see org.xtext.example.mydsl.vaselina.varReturn
   * @generated
   */
  EClass getvarReturn();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.varReturn#getRtn <em>Rtn</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Rtn</em>'.
   * @see org.xtext.example.mydsl.vaselina.varReturn#getRtn()
   * @see #getvarReturn()
   * @generated
   */
  EReference getvarReturn_Rtn();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.varDeclared <em>var Declared</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Declared</em>'.
   * @see org.xtext.example.mydsl.vaselina.varDeclared
   * @generated
   */
  EClass getvarDeclared();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.varDeclared#getScope <em>Scope</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Scope</em>'.
   * @see org.xtext.example.mydsl.vaselina.varDeclared#getScope()
   * @see #getvarDeclared()
   * @generated
   */
  EAttribute getvarDeclared_Scope();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.varDeclared#getDim <em>Dim</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Dim</em>'.
   * @see org.xtext.example.mydsl.vaselina.varDeclared#getDim()
   * @see #getvarDeclared()
   * @generated
   */
  EReference getvarDeclared_Dim();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.varAssignment <em>var Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Assignment</em>'.
   * @see org.xtext.example.mydsl.vaselina.varAssignment
   * @generated
   */
  EClass getvarAssignment();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.varAssignment#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.mydsl.vaselina.varAssignment#getVariable()
   * @see #getvarAssignment()
   * @generated
   */
  EReference getvarAssignment_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.varAssignment#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.xtext.example.mydsl.vaselina.varAssignment#getExpr()
   * @see #getvarAssignment()
   * @generated
   */
  EReference getvarAssignment_Expr();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see org.xtext.example.mydsl.vaselina.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.arrayRefs <em>array Refs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>array Refs</em>'.
   * @see org.xtext.example.mydsl.vaselina.arrayRefs
   * @generated
   */
  EClass getarrayRefs();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.mydsl.vaselina.arrayRefs#getArrRefs <em>Arr Refs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Arr Refs</em>'.
   * @see org.xtext.example.mydsl.vaselina.arrayRefs#getArrRefs()
   * @see #getarrayRefs()
   * @generated
   */
  EReference getarrayRefs_ArrRefs();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.arrayRefs#getDims <em>Dims</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Dims</em>'.
   * @see org.xtext.example.mydsl.vaselina.arrayRefs#getDims()
   * @see #getarrayRefs()
   * @generated
   */
  EReference getarrayRefs_Dims();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.varRefs <em>var Refs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Refs</em>'.
   * @see org.xtext.example.mydsl.vaselina.varRefs
   * @generated
   */
  EClass getvarRefs();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.mydsl.vaselina.varRefs#getVaRefs <em>Va Refs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Va Refs</em>'.
   * @see org.xtext.example.mydsl.vaselina.varRefs#getVaRefs()
   * @see #getvarRefs()
   * @generated
   */
  EReference getvarRefs_VaRefs();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.varSymbol <em>var Symbol</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Symbol</em>'.
   * @see org.xtext.example.mydsl.vaselina.varSymbol
   * @generated
   */
  EClass getvarSymbol();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.varSymbol#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.vaselina.varSymbol#getName()
   * @see #getvarSymbol()
   * @generated
   */
  EAttribute getvarSymbol_Name();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.varSymbol#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.example.mydsl.vaselina.varSymbol#getType()
   * @see #getvarSymbol()
   * @generated
   */
  EAttribute getvarSymbol_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.arrayDimension <em>array Dimension</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>array Dimension</em>'.
   * @see org.xtext.example.mydsl.vaselina.arrayDimension
   * @generated
   */
  EClass getarrayDimension();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.arrayDimension#getIndex <em>Index</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Index</em>'.
   * @see org.xtext.example.mydsl.vaselina.arrayDimension#getIndex()
   * @see #getarrayDimension()
   * @generated
   */
  EReference getarrayDimension_Index();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.FuncCall <em>Func Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Func Call</em>'.
   * @see org.xtext.example.mydsl.vaselina.FuncCall
   * @generated
   */
  EClass getFuncCall();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.mydsl.vaselina.FuncCall#getFunc <em>Func</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Func</em>'.
   * @see org.xtext.example.mydsl.vaselina.FuncCall#getFunc()
   * @see #getFuncCall()
   * @generated
   */
  EReference getFuncCall_Func();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.FuncParameter <em>Func Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Func Parameter</em>'.
   * @see org.xtext.example.mydsl.vaselina.FuncParameter
   * @generated
   */
  EClass getFuncParameter();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.FuncDefinition <em>Func Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Func Definition</em>'.
   * @see org.xtext.example.mydsl.vaselina.FuncDefinition
   * @generated
   */
  EClass getFuncDefinition();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.FuncDefinition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.vaselina.FuncDefinition#getName()
   * @see #getFuncDefinition()
   * @generated
   */
  EAttribute getFuncDefinition_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.FuncDefinition#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see org.xtext.example.mydsl.vaselina.FuncDefinition#getArgs()
   * @see #getFuncDefinition()
   * @generated
   */
  EReference getFuncDefinition_Args();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.FuncDefinition#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see org.xtext.example.mydsl.vaselina.FuncDefinition#getBody()
   * @see #getFuncDefinition()
   * @generated
   */
  EReference getFuncDefinition_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.AbstractMethodCall <em>Abstract Method Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abstract Method Call</em>'.
   * @see org.xtext.example.mydsl.vaselina.AbstractMethodCall
   * @generated
   */
  EClass getAbstractMethodCall();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.AbstractMethodCall#getArgs <em>Args</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Args</em>'.
   * @see org.xtext.example.mydsl.vaselina.AbstractMethodCall#getArgs()
   * @see #getAbstractMethodCall()
   * @generated
   */
  EReference getAbstractMethodCall_Args();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.StdFunction <em>Std Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Std Function</em>'.
   * @see org.xtext.example.mydsl.vaselina.StdFunction
   * @generated
   */
  EClass getStdFunction();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.StdFunction#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.mydsl.vaselina.StdFunction#getName()
   * @see #getStdFunction()
   * @generated
   */
  EAttribute getStdFunction_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.IfExpression <em>If Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Expression</em>'.
   * @see org.xtext.example.mydsl.vaselina.IfExpression
   * @generated
   */
  EClass getIfExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.IfExpression#getIfconditon <em>Ifconditon</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Ifconditon</em>'.
   * @see org.xtext.example.mydsl.vaselina.IfExpression#getIfconditon()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Ifconditon();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.IfExpression#getThen <em>Then</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Then</em>'.
   * @see org.xtext.example.mydsl.vaselina.IfExpression#getThen()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Then();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.IfExpression#getElse <em>Else</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Else</em>'.
   * @see org.xtext.example.mydsl.vaselina.IfExpression#getElse()
   * @see #getIfExpression()
   * @generated
   */
  EReference getIfExpression_Else();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.DoWhileExpression <em>Do While Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Do While Expression</em>'.
   * @see org.xtext.example.mydsl.vaselina.DoWhileExpression
   * @generated
   */
  EClass getDoWhileExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.DoWhileExpression#getLoopConditon <em>Loop Conditon</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Loop Conditon</em>'.
   * @see org.xtext.example.mydsl.vaselina.DoWhileExpression#getLoopConditon()
   * @see #getDoWhileExpression()
   * @generated
   */
  EReference getDoWhileExpression_LoopConditon();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.DoWhileExpression#getBody <em>Body</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Body</em>'.
   * @see org.xtext.example.mydsl.vaselina.DoWhileExpression#getBody()
   * @see #getDoWhileExpression()
   * @generated
   */
  EReference getDoWhileExpression_Body();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.BrkStr <em>Brk Str</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Brk Str</em>'.
   * @see org.xtext.example.mydsl.vaselina.BrkStr
   * @generated
   */
  EClass getBrkStr();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.BrkStr#getBrk <em>Brk</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Brk</em>'.
   * @see org.xtext.example.mydsl.vaselina.BrkStr#getBrk()
   * @see #getBrkStr()
   * @generated
   */
  EAttribute getBrkStr_Brk();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.ReturnDeclaration <em>Return Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Declaration</em>'.
   * @see org.xtext.example.mydsl.vaselina.ReturnDeclaration
   * @generated
   */
  EClass getReturnDeclaration();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.ReturnDeclaration#getRtnType <em>Rtn Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Rtn Type</em>'.
   * @see org.xtext.example.mydsl.vaselina.ReturnDeclaration#getRtnType()
   * @see #getReturnDeclaration()
   * @generated
   */
  EAttribute getReturnDeclaration_RtnType();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.DOUBLE <em>DOUBLE</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>DOUBLE</em>'.
   * @see org.xtext.example.mydsl.vaselina.DOUBLE
   * @generated
   */
  EClass getDOUBLE();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.DOUBLE#getInteger <em>Integer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Integer</em>'.
   * @see org.xtext.example.mydsl.vaselina.DOUBLE#getInteger()
   * @see #getDOUBLE()
   * @generated
   */
  EAttribute getDOUBLE_Integer();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.DOUBLE#getDecimal <em>Decimal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Decimal</em>'.
   * @see org.xtext.example.mydsl.vaselina.DOUBLE#getDecimal()
   * @see #getDOUBLE()
   * @generated
   */
  EAttribute getDOUBLE_Decimal();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.varExpression <em>var Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Expression</em>'.
   * @see org.xtext.example.mydsl.vaselina.varExpression
   * @generated
   */
  EClass getvarExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.Or <em>Or</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Or</em>'.
   * @see org.xtext.example.mydsl.vaselina.Or
   * @generated
   */
  EClass getOr();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Or#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.vaselina.Or#getLeft()
   * @see #getOr()
   * @generated
   */
  EReference getOr_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.Or#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.vaselina.Or#getOp()
   * @see #getOr()
   * @generated
   */
  EAttribute getOr_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Or#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.vaselina.Or#getRight()
   * @see #getOr()
   * @generated
   */
  EReference getOr_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.And <em>And</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And</em>'.
   * @see org.xtext.example.mydsl.vaselina.And
   * @generated
   */
  EClass getAnd();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.And#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.vaselina.And#getLeft()
   * @see #getAnd()
   * @generated
   */
  EReference getAnd_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.And#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.vaselina.And#getOp()
   * @see #getAnd()
   * @generated
   */
  EAttribute getAnd_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.And#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.vaselina.And#getRight()
   * @see #getAnd()
   * @generated
   */
  EReference getAnd_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.Equality <em>Equality</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equality</em>'.
   * @see org.xtext.example.mydsl.vaselina.Equality
   * @generated
   */
  EClass getEquality();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Equality#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.vaselina.Equality#getLeft()
   * @see #getEquality()
   * @generated
   */
  EReference getEquality_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.Equality#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.vaselina.Equality#getOp()
   * @see #getEquality()
   * @generated
   */
  EAttribute getEquality_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Equality#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.vaselina.Equality#getRight()
   * @see #getEquality()
   * @generated
   */
  EReference getEquality_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.Comparison <em>Comparison</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comparison</em>'.
   * @see org.xtext.example.mydsl.vaselina.Comparison
   * @generated
   */
  EClass getComparison();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Comparison#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.vaselina.Comparison#getLeft()
   * @see #getComparison()
   * @generated
   */
  EReference getComparison_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.Comparison#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.vaselina.Comparison#getOp()
   * @see #getComparison()
   * @generated
   */
  EAttribute getComparison_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Comparison#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.vaselina.Comparison#getRight()
   * @see #getComparison()
   * @generated
   */
  EReference getComparison_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.PlusOrMinus <em>Plus Or Minus</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Plus Or Minus</em>'.
   * @see org.xtext.example.mydsl.vaselina.PlusOrMinus
   * @generated
   */
  EClass getPlusOrMinus();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.PlusOrMinus#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.vaselina.PlusOrMinus#getLeft()
   * @see #getPlusOrMinus()
   * @generated
   */
  EReference getPlusOrMinus_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.PlusOrMinus#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.vaselina.PlusOrMinus#getOp()
   * @see #getPlusOrMinus()
   * @generated
   */
  EAttribute getPlusOrMinus_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.PlusOrMinus#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.vaselina.PlusOrMinus#getRight()
   * @see #getPlusOrMinus()
   * @generated
   */
  EReference getPlusOrMinus_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.MulOrDiv <em>Mul Or Div</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mul Or Div</em>'.
   * @see org.xtext.example.mydsl.vaselina.MulOrDiv
   * @generated
   */
  EClass getMulOrDiv();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.MulOrDiv#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.vaselina.MulOrDiv#getLeft()
   * @see #getMulOrDiv()
   * @generated
   */
  EReference getMulOrDiv_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.MulOrDiv#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.vaselina.MulOrDiv#getOp()
   * @see #getMulOrDiv()
   * @generated
   */
  EAttribute getMulOrDiv_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.MulOrDiv#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.vaselina.MulOrDiv#getRight()
   * @see #getMulOrDiv()
   * @generated
   */
  EReference getMulOrDiv_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.Module <em>Module</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Module</em>'.
   * @see org.xtext.example.mydsl.vaselina.Module
   * @generated
   */
  EClass getModule();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Module#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.xtext.example.mydsl.vaselina.Module#getLeft()
   * @see #getModule()
   * @generated
   */
  EReference getModule_Left();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.Module#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.xtext.example.mydsl.vaselina.Module#getOp()
   * @see #getModule()
   * @generated
   */
  EAttribute getModule_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Module#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.xtext.example.mydsl.vaselina.Module#getRight()
   * @see #getModule()
   * @generated
   */
  EReference getModule_Right();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.Inside <em>Inside</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Inside</em>'.
   * @see org.xtext.example.mydsl.vaselina.Inside
   * @generated
   */
  EClass getInside();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Inside#getInside <em>Inside</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Inside</em>'.
   * @see org.xtext.example.mydsl.vaselina.Inside#getInside()
   * @see #getInside()
   * @generated
   */
  EReference getInside_Inside();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.Not <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Not</em>'.
   * @see org.xtext.example.mydsl.vaselina.Not
   * @generated
   */
  EClass getNot();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.Not#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.vaselina.Not#getExpression()
   * @see #getNot()
   * @generated
   */
  EReference getNot_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.StringRef <em>String Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.StringRef
   * @generated
   */
  EClass getStringRef();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.StringRef#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.example.mydsl.vaselina.StringRef#getValue()
   * @see #getStringRef()
   * @generated
   */
  EAttribute getStringRef_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.numRef <em>num Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>num Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.numRef
   * @generated
   */
  EClass getnumRef();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.numRef#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Value</em>'.
   * @see org.xtext.example.mydsl.vaselina.numRef#getValue()
   * @see #getnumRef()
   * @generated
   */
  EAttribute getnumRef_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.doubleRef <em>double Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>double Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.doubleRef
   * @generated
   */
  EClass getdoubleRef();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.vaselina.doubleRef#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.example.mydsl.vaselina.doubleRef#getValue()
   * @see #getdoubleRef()
   * @generated
   */
  EReference getdoubleRef_Value();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.boolRef <em>bool Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>bool Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.boolRef
   * @generated
   */
  EClass getboolRef();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.vaselina.boolRef#getVarRef <em>Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Var Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.boolRef#getVarRef()
   * @see #getboolRef()
   * @generated
   */
  EAttribute getboolRef_VarRef();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.varRef <em>var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.varRef
   * @generated
   */
  EClass getvarRef();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.mydsl.vaselina.varRef#getVarRef <em>Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.varRef#getVarRef()
   * @see #getvarRef()
   * @generated
   */
  EReference getvarRef_VarRef();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.vaselina.arrayRef <em>array Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>array Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.arrayRef
   * @generated
   */
  EClass getarrayRef();

  /**
   * Returns the meta object for the reference '{@link org.xtext.example.mydsl.vaselina.arrayRef#getVarRef <em>Var Ref</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var Ref</em>'.
   * @see org.xtext.example.mydsl.vaselina.arrayRef#getVarRef()
   * @see #getarrayRef()
   * @generated
   */
  EReference getarrayRef_VarRef();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.vaselina.arrayRef#getDim <em>Dim</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Dim</em>'.
   * @see org.xtext.example.mydsl.vaselina.arrayRef#getDim()
   * @see #getarrayRef()
   * @generated
   */
  EReference getarrayRef_Dim();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  VaselinaFactory getVaselinaFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.VaselinaProgramImpl <em>Program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaProgramImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getVaselinaProgram()
     * @generated
     */
    EClass VASELINA_PROGRAM = eINSTANCE.getVaselinaProgram();

    /**
     * The meta object literal for the '<em><b>Global</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VASELINA_PROGRAM__GLOBAL = eINSTANCE.getVaselinaProgram_Global();

    /**
     * The meta object literal for the '<em><b>Func</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VASELINA_PROGRAM__FUNC = eINSTANCE.getVaselinaProgram_Func();

    /**
     * The meta object literal for the '<em><b>Main</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VASELINA_PROGRAM__MAIN = eINSTANCE.getVaselinaProgram_Main();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.mainDeclaredImpl <em>main Declared</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.mainDeclaredImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getmainDeclared()
     * @generated
     */
    EClass MAIN_DECLARED = eINSTANCE.getmainDeclared();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MAIN_DECLARED__BODY = eINSTANCE.getmainDeclared_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.BodyStatementImpl <em>Body Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.BodyStatementImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getBodyStatement()
     * @generated
     */
    EClass BODY_STATEMENT = eINSTANCE.getBodyStatement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.varReturnImpl <em>var Return</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.varReturnImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarReturn()
     * @generated
     */
    EClass VAR_RETURN = eINSTANCE.getvarReturn();

    /**
     * The meta object literal for the '<em><b>Rtn</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_RETURN__RTN = eINSTANCE.getvarReturn_Rtn();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.varDeclaredImpl <em>var Declared</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.varDeclaredImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarDeclared()
     * @generated
     */
    EClass VAR_DECLARED = eINSTANCE.getvarDeclared();

    /**
     * The meta object literal for the '<em><b>Scope</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_DECLARED__SCOPE = eINSTANCE.getvarDeclared_Scope();

    /**
     * The meta object literal for the '<em><b>Dim</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARED__DIM = eINSTANCE.getvarDeclared_Dim();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.varAssignmentImpl <em>var Assignment</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.varAssignmentImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarAssignment()
     * @generated
     */
    EClass VAR_ASSIGNMENT = eINSTANCE.getvarAssignment();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_ASSIGNMENT__VARIABLE = eINSTANCE.getvarAssignment_Variable();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_ASSIGNMENT__EXPR = eINSTANCE.getvarAssignment_Expr();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.VariableImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.arrayRefsImpl <em>array Refs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.arrayRefsImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getarrayRefs()
     * @generated
     */
    EClass ARRAY_REFS = eINSTANCE.getarrayRefs();

    /**
     * The meta object literal for the '<em><b>Arr Refs</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_REFS__ARR_REFS = eINSTANCE.getarrayRefs_ArrRefs();

    /**
     * The meta object literal for the '<em><b>Dims</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_REFS__DIMS = eINSTANCE.getarrayRefs_Dims();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.varRefsImpl <em>var Refs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.varRefsImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarRefs()
     * @generated
     */
    EClass VAR_REFS = eINSTANCE.getvarRefs();

    /**
     * The meta object literal for the '<em><b>Va Refs</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_REFS__VA_REFS = eINSTANCE.getvarRefs_VaRefs();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.varSymbolImpl <em>var Symbol</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.varSymbolImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarSymbol()
     * @generated
     */
    EClass VAR_SYMBOL = eINSTANCE.getvarSymbol();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_SYMBOL__NAME = eINSTANCE.getvarSymbol_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_SYMBOL__TYPE = eINSTANCE.getvarSymbol_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.arrayDimensionImpl <em>array Dimension</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.arrayDimensionImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getarrayDimension()
     * @generated
     */
    EClass ARRAY_DIMENSION = eINSTANCE.getarrayDimension();

    /**
     * The meta object literal for the '<em><b>Index</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_DIMENSION__INDEX = eINSTANCE.getarrayDimension_Index();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.FuncCallImpl <em>Func Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.FuncCallImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getFuncCall()
     * @generated
     */
    EClass FUNC_CALL = eINSTANCE.getFuncCall();

    /**
     * The meta object literal for the '<em><b>Func</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNC_CALL__FUNC = eINSTANCE.getFuncCall_Func();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.FuncParameterImpl <em>Func Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.FuncParameterImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getFuncParameter()
     * @generated
     */
    EClass FUNC_PARAMETER = eINSTANCE.getFuncParameter();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.FuncDefinitionImpl <em>Func Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.FuncDefinitionImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getFuncDefinition()
     * @generated
     */
    EClass FUNC_DEFINITION = eINSTANCE.getFuncDefinition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNC_DEFINITION__NAME = eINSTANCE.getFuncDefinition_Name();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNC_DEFINITION__ARGS = eINSTANCE.getFuncDefinition_Args();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNC_DEFINITION__BODY = eINSTANCE.getFuncDefinition_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.AbstractMethodCallImpl <em>Abstract Method Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.AbstractMethodCallImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getAbstractMethodCall()
     * @generated
     */
    EClass ABSTRACT_METHOD_CALL = eINSTANCE.getAbstractMethodCall();

    /**
     * The meta object literal for the '<em><b>Args</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ABSTRACT_METHOD_CALL__ARGS = eINSTANCE.getAbstractMethodCall_Args();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.StdFunctionImpl <em>Std Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.StdFunctionImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getStdFunction()
     * @generated
     */
    EClass STD_FUNCTION = eINSTANCE.getStdFunction();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STD_FUNCTION__NAME = eINSTANCE.getStdFunction_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.IfExpressionImpl <em>If Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.IfExpressionImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getIfExpression()
     * @generated
     */
    EClass IF_EXPRESSION = eINSTANCE.getIfExpression();

    /**
     * The meta object literal for the '<em><b>Ifconditon</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__IFCONDITON = eINSTANCE.getIfExpression_Ifconditon();

    /**
     * The meta object literal for the '<em><b>Then</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__THEN = eINSTANCE.getIfExpression_Then();

    /**
     * The meta object literal for the '<em><b>Else</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_EXPRESSION__ELSE = eINSTANCE.getIfExpression_Else();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.DoWhileExpressionImpl <em>Do While Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.DoWhileExpressionImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getDoWhileExpression()
     * @generated
     */
    EClass DO_WHILE_EXPRESSION = eINSTANCE.getDoWhileExpression();

    /**
     * The meta object literal for the '<em><b>Loop Conditon</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DO_WHILE_EXPRESSION__LOOP_CONDITON = eINSTANCE.getDoWhileExpression_LoopConditon();

    /**
     * The meta object literal for the '<em><b>Body</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DO_WHILE_EXPRESSION__BODY = eINSTANCE.getDoWhileExpression_Body();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.BrkStrImpl <em>Brk Str</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.BrkStrImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getBrkStr()
     * @generated
     */
    EClass BRK_STR = eINSTANCE.getBrkStr();

    /**
     * The meta object literal for the '<em><b>Brk</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BRK_STR__BRK = eINSTANCE.getBrkStr_Brk();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.ReturnDeclarationImpl <em>Return Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.ReturnDeclarationImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getReturnDeclaration()
     * @generated
     */
    EClass RETURN_DECLARATION = eINSTANCE.getReturnDeclaration();

    /**
     * The meta object literal for the '<em><b>Rtn Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RETURN_DECLARATION__RTN_TYPE = eINSTANCE.getReturnDeclaration_RtnType();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.DOUBLEImpl <em>DOUBLE</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.DOUBLEImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getDOUBLE()
     * @generated
     */
    EClass DOUBLE = eINSTANCE.getDOUBLE();

    /**
     * The meta object literal for the '<em><b>Integer</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DOUBLE__INTEGER = eINSTANCE.getDOUBLE_Integer();

    /**
     * The meta object literal for the '<em><b>Decimal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute DOUBLE__DECIMAL = eINSTANCE.getDOUBLE_Decimal();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.varExpressionImpl <em>var Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.varExpressionImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarExpression()
     * @generated
     */
    EClass VAR_EXPRESSION = eINSTANCE.getvarExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.OrImpl <em>Or</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.OrImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getOr()
     * @generated
     */
    EClass OR = eINSTANCE.getOr();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR__LEFT = eINSTANCE.getOr_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OR__OP = eINSTANCE.getOr_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OR__RIGHT = eINSTANCE.getOr_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.AndImpl <em>And</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.AndImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getAnd()
     * @generated
     */
    EClass AND = eINSTANCE.getAnd();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND__LEFT = eINSTANCE.getAnd_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute AND__OP = eINSTANCE.getAnd_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference AND__RIGHT = eINSTANCE.getAnd_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.EqualityImpl <em>Equality</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.EqualityImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getEquality()
     * @generated
     */
    EClass EQUALITY = eINSTANCE.getEquality();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY__LEFT = eINSTANCE.getEquality_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EQUALITY__OP = eINSTANCE.getEquality_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EQUALITY__RIGHT = eINSTANCE.getEquality_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.ComparisonImpl <em>Comparison</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.ComparisonImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getComparison()
     * @generated
     */
    EClass COMPARISON = eINSTANCE.getComparison();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON__LEFT = eINSTANCE.getComparison_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMPARISON__OP = eINSTANCE.getComparison_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPARISON__RIGHT = eINSTANCE.getComparison_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.PlusOrMinusImpl <em>Plus Or Minus</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.PlusOrMinusImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getPlusOrMinus()
     * @generated
     */
    EClass PLUS_OR_MINUS = eINSTANCE.getPlusOrMinus();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS_OR_MINUS__LEFT = eINSTANCE.getPlusOrMinus_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PLUS_OR_MINUS__OP = eINSTANCE.getPlusOrMinus_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PLUS_OR_MINUS__RIGHT = eINSTANCE.getPlusOrMinus_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.MulOrDivImpl <em>Mul Or Div</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.MulOrDivImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getMulOrDiv()
     * @generated
     */
    EClass MUL_OR_DIV = eINSTANCE.getMulOrDiv();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MUL_OR_DIV__LEFT = eINSTANCE.getMulOrDiv_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MUL_OR_DIV__OP = eINSTANCE.getMulOrDiv_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MUL_OR_DIV__RIGHT = eINSTANCE.getMulOrDiv_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.ModuleImpl <em>Module</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.ModuleImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getModule()
     * @generated
     */
    EClass MODULE = eINSTANCE.getModule();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODULE__LEFT = eINSTANCE.getModule_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute MODULE__OP = eINSTANCE.getModule_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODULE__RIGHT = eINSTANCE.getModule_Right();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.InsideImpl <em>Inside</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.InsideImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getInside()
     * @generated
     */
    EClass INSIDE = eINSTANCE.getInside();

    /**
     * The meta object literal for the '<em><b>Inside</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INSIDE__INSIDE = eINSTANCE.getInside_Inside();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.NotImpl <em>Not</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.NotImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getNot()
     * @generated
     */
    EClass NOT = eINSTANCE.getNot();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NOT__EXPRESSION = eINSTANCE.getNot_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.StringRefImpl <em>String Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.StringRefImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getStringRef()
     * @generated
     */
    EClass STRING_REF = eINSTANCE.getStringRef();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_REF__VALUE = eINSTANCE.getStringRef_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.numRefImpl <em>num Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.numRefImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getnumRef()
     * @generated
     */
    EClass NUM_REF = eINSTANCE.getnumRef();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUM_REF__VALUE = eINSTANCE.getnumRef_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.doubleRefImpl <em>double Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.doubleRefImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getdoubleRef()
     * @generated
     */
    EClass DOUBLE_REF = eINSTANCE.getdoubleRef();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DOUBLE_REF__VALUE = eINSTANCE.getdoubleRef_Value();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.boolRefImpl <em>bool Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.boolRefImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getboolRef()
     * @generated
     */
    EClass BOOL_REF = eINSTANCE.getboolRef();

    /**
     * The meta object literal for the '<em><b>Var Ref</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL_REF__VAR_REF = eINSTANCE.getboolRef_VarRef();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.varRefImpl <em>var Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.varRefImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getvarRef()
     * @generated
     */
    EClass VAR_REF = eINSTANCE.getvarRef();

    /**
     * The meta object literal for the '<em><b>Var Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_REF__VAR_REF = eINSTANCE.getvarRef_VarRef();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.vaselina.impl.arrayRefImpl <em>array Ref</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.vaselina.impl.arrayRefImpl
     * @see org.xtext.example.mydsl.vaselina.impl.VaselinaPackageImpl#getarrayRef()
     * @generated
     */
    EClass ARRAY_REF = eINSTANCE.getarrayRef();

    /**
     * The meta object literal for the '<em><b>Var Ref</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_REF__VAR_REF = eINSTANCE.getarrayRef_VarRef();

    /**
     * The meta object literal for the '<em><b>Dim</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARRAY_REF__DIM = eINSTANCE.getarrayRef_Dim();

  }

} //VaselinaPackage
