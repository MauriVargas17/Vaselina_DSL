/**
 * generated by Xtext 2.27.0-SNAPSHOT
 */
package org.xtext.example.mydsl.vaselina.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.example.mydsl.vaselina.VaselinaPackage;
import org.xtext.example.mydsl.vaselina.varExpression;
import org.xtext.example.mydsl.vaselina.varReturn;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>var Return</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.vaselina.impl.varReturnImpl#getRtn <em>Rtn</em>}</li>
 * </ul>
 *
 * @generated
 */
public class varReturnImpl extends BodyStatementImpl implements varReturn
{
  /**
   * The cached value of the '{@link #getRtn() <em>Rtn</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRtn()
   * @generated
   * @ordered
   */
  protected varExpression rtn;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected varReturnImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return VaselinaPackage.Literals.VAR_RETURN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public varExpression getRtn()
  {
    return rtn;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRtn(varExpression newRtn, NotificationChain msgs)
  {
    varExpression oldRtn = rtn;
    rtn = newRtn;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, VaselinaPackage.VAR_RETURN__RTN, oldRtn, newRtn);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRtn(varExpression newRtn)
  {
    if (newRtn != rtn)
    {
      NotificationChain msgs = null;
      if (rtn != null)
        msgs = ((InternalEObject)rtn).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - VaselinaPackage.VAR_RETURN__RTN, null, msgs);
      if (newRtn != null)
        msgs = ((InternalEObject)newRtn).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - VaselinaPackage.VAR_RETURN__RTN, null, msgs);
      msgs = basicSetRtn(newRtn, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, VaselinaPackage.VAR_RETURN__RTN, newRtn, newRtn));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case VaselinaPackage.VAR_RETURN__RTN:
        return basicSetRtn(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case VaselinaPackage.VAR_RETURN__RTN:
        return getRtn();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case VaselinaPackage.VAR_RETURN__RTN:
        setRtn((varExpression)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case VaselinaPackage.VAR_RETURN__RTN:
        setRtn((varExpression)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case VaselinaPackage.VAR_RETURN__RTN:
        return rtn != null;
    }
    return super.eIsSet(featureID);
  }

} //varReturnImpl
